name: Conway Bikes Frequent Order Check

on:
  # Run every 10 minutes
  schedule:
    - cron: "*/10 * * * *"

  # Allow manual trigger for testing
  workflow_dispatch:

# Set timezone to Madrid for consistent execution
env:
  TZ: Europe/Madrid

jobs:
  frequent-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create environment file
        run: |
          cat > .env << EOF
          # Holded API Configuration
          HOLDED_API_KEY=${{ secrets.HOLDED_API_KEY }}
          HOLDED_BASE_URL=${{ secrets.HOLDED_BASE_URL }}

          # Email Configuration
          SMTP_SERVER=${{ secrets.SMTP_SERVER }}
          SMTP_PORT=${{ secrets.SMTP_PORT }}
          EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
          EMAIL_FROM=${{ secrets.EMAIL_FROM }}

          # Notification Configuration
          TARGET_EMAIL=${{ secrets.TARGET_EMAIL }}
          EMAIL_SUBJECT_PREFIX=${{ secrets.EMAIL_SUBJECT_PREFIX }}

          # Timezone Configuration
          TIMEZONE=${{ secrets.TIMEZONE }}

          # Application Configuration
          CSV_FILE_PATH=Bike_References_Conway_2025.csv
          LOG_LEVEL=INFO
          LOG_FILE=logs/holded_automation.log

          # Frequent Check Configuration
          CHECK_DELAY_MINUTES=${{ secrets.CHECK_DELAY_MINUTES }}
          OPERATION_START_HOUR=${{ secrets.OPERATION_START_HOUR }}
          OPERATION_END_HOUR=${{ secrets.OPERATION_END_HOUR }}

          # Production Configuration
          TEST_MODE=false
          TEST_EMAIL_ONLY=false
          EOF

      - name: Create logs directory
        run: mkdir -p logs

      - name: Run frequent check
        run: |
          echo "ðŸš´ Starting Conway Bikes frequent order check..."
          echo "Current time (Madrid): $(TZ=Europe/Madrid date)"
          echo "=================================="
          python main.py frequent
          echo "=================================="
          echo "âœ… Frequent check completed"
        env:
          TZ: Europe/Madrid

      - name: Upload logs as artifact (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: automation-logs-${{ github.run_id }}
          path: logs/
          retention-days: 7

      - name: Upload logs as artifact (weekly)
        if: github.event.schedule == '*/5 * * * *' && github.event_name == 'schedule'
        uses: actions/upload-artifact@v4
        with:
          name: weekly-logs-${{ github.run_id }}
          path: logs/
          retention-days: 30
        # Only upload weekly logs (every Monday at 9:00 AM)
        # This is a simplified approach; adjust as needed
